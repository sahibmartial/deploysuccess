version: '3.3'
services:

 #PHP Service
 app:
   build:
     args:
       user: laravel
       uid: 1000
     context: .
     dockerfile: Dockerfile
   image: ferme-app
   
   container_name: app-ferme
   restart: unless-stopped
   tty: true
   environment:
     SERVICE_NAME: app
     SERVICE_TAGS: dev
   working_dir: /var/www
   volumes:
     - ./:/var/www
     - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
   networks:
     - app-network

 #Nginx Service
 webserver:
   image: nginx:alpine
   container_name: webserver
   restart: unless-stopped
   tty: true
   ports:
     - "8088:80"
     - "8444:443"
   volumes:
     - ./:/var/www
     - ./docker-compose/nginx/:/etc/nginx/conf.d/

   networks:
     - app-network

 #MySQL Service
 db:
   image: mysql:5.7.22
   container_name: db-ferme
   restart: unless-stopped
   tty: true
   ports:
#     - "3308:3306"
   environment:
     MYSQL_DATABASE: ${DB_DATABASE}
     MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
     MYSQL_PASSWORD: ${DB_PASSWORD}
     MYSQL_USER: ${DB_USERNAME}
     SERVICE_TAGS: dev
     SERVICE_NAME: mysql   
   volumes:
     - /dbferme:/var/lib/mysql/
     - ./docker-compose/mysql:/docker-entrypoint-initdb.d 
     - ./docker-compose/mysql/my.cnf:/etc/mysql/my.cnf
     
   networks:
     - app-network

 adminer-express:
   image: adminer
   container_name: adminer-express
   restart: always
   ports: 
       -8089:8080
   environment:  
     MYSQL_DATABASE: ${DB_DATABASE}  
     MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
     MYSQL_PASSWORD: ${DB_PASSWORD}
     MYSQL_USER: ${DB_USERNAME}


#Docker Networks
networks:
 app-network:
   driver: bridge
#Volumes
volumes:
 dbferme:
   driver: local